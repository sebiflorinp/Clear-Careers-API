openapi: 3.0.3
info:
  title: Clear Careers API
  version: 1.0.0
  description: A job searching application.
paths:
  /api/v1/aplications/{application_id}/:
    delete:
      operationId: aplications_destroy
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        required: true
      tags:
      - aplications
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/applications/:
    get:
      operationId: applications_retrieve
      tags:
      - applications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
  /api/v1/auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/v1/auth/users/:
    get:
      operationId: auth_users_list
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCredentials'
          description: ''
    post:
      operationId: auth_users_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreatePasswordRetype'
          description: ''
  /api/v1/auth/users/{id}/:
    get:
      operationId: auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: ''
    put:
      operationId: auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCredentials'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: ''
    patch:
      operationId: auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserCredentials'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserCredentials'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserCredentials'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: ''
    delete:
      operationId: auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/activation/:
    post:
      operationId: auth_users_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/v1/auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_me_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_me_destroy
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_email/:
    post:
      operationId: auth_users_reset_email_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_email_confirm/:
    post:
      operationId: auth_users_reset_email_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/v1/auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/v1/auth/users/set_email/:
    post:
      operationId: auth_users_set_email_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/v1/auth/users/set_password/:
    post:
      operationId: auth_users_set_password_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/v1/employee/{employee_id}/education/:
    post:
      operationId: employee_education_create
      parameters:
      - in: path
        name: employee_id
        schema:
          type: integer
        required: true
      tags:
      - employee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Education'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Education'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
  /api/v1/employee/{employee_id}/education/{education_id}:
    put:
      operationId: employee_education_update
      parameters:
      - in: path
        name: education_id
        schema:
          type: integer
        required: true
      - in: path
        name: employee_id
        schema:
          type: integer
        required: true
      tags:
      - employee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Education'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Education'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
    delete:
      operationId: employee_education_destroy
      parameters:
      - in: path
        name: education_id
        schema:
          type: integer
        required: true
      - in: path
        name: employee_id
        schema:
          type: integer
        required: true
      tags:
      - employee
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/employees/:
    get:
      operationId: employees_retrieve
      tags:
      - employees
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    post:
      operationId: employees_create
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
  /api/v1/employees/{employee_id}:
    get:
      operationId: employees_retrieve_2
      parameters:
      - in: path
        name: employee_id
        schema:
          type: integer
        required: true
      tags:
      - employees
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    put:
      operationId: employees_update
      parameters:
      - in: path
        name: employee_id
        schema:
          type: integer
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
  /api/v1/employees/{employee_id}/applications/:
    post:
      operationId: employees_applications_create
      parameters:
      - in: path
        name: employee_id
        schema:
          type: integer
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Application'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
  /api/v1/employees/{employee_id}/experiences/:
    post:
      operationId: employees_experiences_create
      parameters:
      - in: path
        name: employee_id
        schema:
          type: integer
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experience'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
  /api/v1/employees/{employee_id}/experiences/{experience_id}:
    put:
      operationId: employees_experiences_update
      parameters:
      - in: path
        name: employee_id
        schema:
          type: integer
        required: true
      - in: path
        name: experience_id
        schema:
          type: integer
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experience'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    delete:
      operationId: employees_experiences_destroy
      parameters:
      - in: path
        name: employee_id
        schema:
          type: integer
        required: true
      - in: path
        name: experience_id
        schema:
          type: integer
        required: true
      tags:
      - employees
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/employers/:
    get:
      operationId: employers_retrieve
      tags:
      - employers
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employer'
          description: ''
    post:
      operationId: employers_create
      tags:
      - employers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employer'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employer'
          description: ''
  /api/v1/employers/{employer_id}:
    get:
      operationId: employers_retrieve_2
      parameters:
      - in: path
        name: employer_id
        schema:
          type: integer
        required: true
      tags:
      - employers
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    put:
      operationId: employers_update
      parameters:
      - in: path
        name: employer_id
        schema:
          type: integer
        required: true
      tags:
      - employers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
  /api/v1/employers/{employer_id}/locations/:
    post:
      operationId: employers_locations_create
      parameters:
      - in: path
        name: employer_id
        schema:
          type: integer
        required: true
      tags:
      - employers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
  /api/v1/employers/{employer_id}/locations/{location_id}:
    put:
      operationId: employers_locations_update
      parameters:
      - in: path
        name: employer_id
        schema:
          type: integer
        required: true
      - in: path
        name: location_id
        schema:
          type: integer
        required: true
      tags:
      - employers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
    delete:
      operationId: employers_locations_destroy
      parameters:
      - in: path
        name: employer_id
        schema:
          type: integer
        required: true
      - in: path
        name: location_id
        schema:
          type: integer
        required: true
      tags:
      - employers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/employers/{employer_id}/postings/:
    post:
      operationId: employers_postings_create
      parameters:
      - in: path
        name: employer_id
        schema:
          type: integer
        required: true
      tags:
      - employers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Posting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Posting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Posting'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posting'
          description: ''
  /api/v1/employers/{employer_id}/postings/{posting_id}:
    put:
      operationId: employers_postings_update
      parameters:
      - in: path
        name: employer_id
        schema:
          type: integer
        required: true
      - in: path
        name: posting_id
        schema:
          type: integer
        required: true
      tags:
      - employers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Posting'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Posting'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Posting'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posting'
          description: ''
    delete:
      operationId: employers_postings_destroy
      parameters:
      - in: path
        name: employer_id
        schema:
          type: integer
        required: true
      - in: path
        name: posting_id
        schema:
          type: integer
        required: true
      tags:
      - employers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/postings/:
    get:
      operationId: postings_retrieve
      tags:
      - postings
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posting'
          description: ''
  /api/v1/users/{receiver_id}/notifications/:
    get:
      operationId: users_notifications_retrieve
      parameters:
      - in: path
        name: receiver_id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    post:
      operationId: users_notifications_create
      parameters:
      - in: path
        name: receiver_id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/users/{receiver_id}/notifications/{notification_id}/:
    delete:
      operationId: users_notifications_destroy
      parameters:
      - in: path
        name: notification_id
        schema:
          type: integer
        required: true
      - in: path
        name: receiver_id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    Application:
      type: object
      properties:
        application_id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date-time
        employee_id:
          type: integer
        employer_id:
          type: integer
        posting_id:
          type: integer
      required:
      - application_id
      - employee_id
      - employer_id
      - posting_id
    BlankEnum:
      enum:
      - ''
    Education:
      type: object
      properties:
        education_id:
          type: integer
          readOnly: true
        institution_name:
          type: string
          maxLength: 100
        field:
          type: string
          maxLength: 100
        degree:
          type: string
          maxLength: 100
        start_year:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        end_year:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        employee_id:
          type: integer
      required:
      - degree
      - education_id
      - employee_id
      - end_year
      - institution_name
      - start_year
    Employee:
      type: object
      properties:
        employee_id:
          type: integer
        user_credentials:
          allOf:
          - $ref: '#/components/schemas/UserCredentials'
          readOnly: true
        phone_number:
          type: string
          maxLength: 20
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        birthdate:
          type: string
          format: date
        country:
          type: string
          maxLength: 30
        city:
          type: string
          maxLength: 30
        description:
          type: string
          maxLength: 1000
        education:
          type: array
          items:
            $ref: '#/components/schemas/Education'
          readOnly: true
        experience:
          type: array
          items:
            $ref: '#/components/schemas/Experience'
          readOnly: true
      required:
      - birthdate
      - city
      - country
      - description
      - education
      - employee_id
      - experience
      - first_name
      - last_name
      - phone_number
      - user_credentials
    Employer:
      type: object
      properties:
        employer_id:
          type: integer
        user_credentials:
          allOf:
          - $ref: '#/components/schemas/UserCredentials'
          readOnly: true
        phone_number:
          type: string
          maxLength: 20
        website_link:
          type: string
          maxLength: 100
        company_name:
          type: string
          maxLength: 100
        industry:
          type: string
          maxLength: 30
        description:
          type: string
          maxLength: 1000
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          readOnly: true
        postings:
          type: array
          items:
            $ref: '#/components/schemas/Posting'
          readOnly: true
      required:
      - company_name
      - description
      - employer_id
      - industry
      - locations
      - phone_number
      - postings
      - user_credentials
    EmploymentArrangementEnum:
      enum:
      - Remote
      - Hybrid
      - On-site
      type: string
      description: |-
        * `Remote` - Remote
        * `Hybrid` - Hybrid
        * `On-site` - On-site
    EmploymentTypeEnum:
      enum:
      - Full time
      - Part time
      type: string
      description: |-
        * `Full time` - Full time
        * `Part time` - Part time
    Experience:
      type: object
      properties:
        experience_id:
          type: integer
          readOnly: true
        employer_name:
          type: string
          maxLength: 100
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 300
        start_year:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        end_year:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        employee_id:
          type: integer
      required:
      - employee_id
      - employer_name
      - end_year
      - experience_id
      - start_year
      - title
    Location:
      type: object
      properties:
        location_id:
          type: integer
          readOnly: true
        country:
          type: string
          maxLength: 30
        city:
          type: string
          maxLength: 50
        street:
          type: string
          maxLength: 100
        street_number:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        is_hq:
          type: boolean
        employer_id:
          type: integer
      required:
      - city
      - country
      - employer_id
      - location_id
      - street
    Notification:
      type: object
      properties:
        notification_id:
          type: integer
          readOnly: true
        description:
          type: string
          maxLength: 1000
        created_at:
          type: string
          format: date-time
        receiver_id:
          type: integer
      required:
      - description
      - notification_id
      - receiver_id
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedUser:
      type: object
      properties:
        is_employer:
          type: boolean
        is_employee:
          type: boolean
        password:
          type: string
          maxLength: 128
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
    PatchedUserCredentials:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        password:
          type: string
          writeOnly: true
        is_employee:
          type: boolean
          readOnly: true
        is_employer:
          type: boolean
          readOnly: true
    Posting:
      type: object
      properties:
        posting_id:
          type: integer
          readOnly: true
        job_title:
          type: string
          maxLength: 50
        location:
          type: string
          maxLength: 50
        job_description:
          type: string
          maxLength: 400
        qualifications:
          type: string
          maxLength: 400
        benefits:
          type: string
          maxLength: 400
        employment_type:
          oneOf:
          - $ref: '#/components/schemas/EmploymentTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        employment_arrangement:
          oneOf:
          - $ref: '#/components/schemas/EmploymentArrangementEnum'
          - $ref: '#/components/schemas/BlankEnum'
        employer_id:
          type: integer
      required:
      - employer_id
      - job_title
      - posting_id
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 200
      required:
      - current_password
      - new_email
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      properties:
        is_employer:
          type: boolean
        is_employee:
          type: boolean
        password:
          type: string
          maxLength: 128
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
      required:
      - email
      - id
      - password
    UserCreatePasswordRetype:
      type: object
      properties:
        is_employer:
          type: boolean
        is_employee:
          type: boolean
        password:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
          maxLength: 200
        id:
          type: integer
          readOnly: true
        re_password:
          type: string
      required:
      - email
      - id
      - password
      - re_password
    UserCredentials:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        password:
          type: string
          writeOnly: true
        is_employee:
          type: boolean
          readOnly: true
        is_employer:
          type: boolean
          readOnly: true
      required:
      - email
      - id
      - is_employee
      - is_employer
      - password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email
          maxLength: 200
      required:
      - new_email
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
